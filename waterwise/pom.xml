<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.waterwise</groupId>
	<artifactId>waterwise</artifactId>
	<version>1.0.0</version>
	<name>waterwise</name>
	<description>Global Solutions Project - Sistema de Prevenção a Enchentes</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
		<spring-ai.version>1.0.0-M4</spring-ai.version>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<azure.webapp.name>webapp-waterwise</azure.webapp.name>
		<azure.resourceGroup>rg-webapp-waterwise</azure.resourceGroup>
		<azure.region>eastus2</azure.region>
	</properties>

	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<!-- Spring Boot Starters -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring AI Ollama -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-ollama-spring-boot-starter</artifactId>
		</dependency>

		<!-- Spring Security Thymeleaf -->
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity6</artifactId>
		</dependency>

		<!-- OAuth2 Client -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>

		<!-- Database Drivers -->
		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc11</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<scope>runtime</scope> <!-- Essencial para Azure SQL -->
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope> <!-- Mante-lo como runtime se application.properties o usa por defeito -->
		</dependency>


		<!-- Development Tools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-bom</artifactId>
				<version>${spring-ai.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-devtools</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.microsoft.azure</groupId>
				<artifactId>azure-webapp-maven-plugin</artifactId>
				<version>2.13.0</version>
				<configuration>
					<subscriptionId>ab0c2682-7f48-4f19-b3d4-fa14f306d395</subscriptionId>
					<resourceGroup>${azure.resourceGroup}</resourceGroup>
					<appName>${azure.webapp.name}</appName>
					<region>${azure.region}</region>
					<pricingTier>F1</pricingTier>
					<runtime>
						<os>Linux</os>
						<javaVersion>Java 17</javaVersion>
						<webContainer>Java SE</webContainer>
					</runtime>
					<deployment>
						<resources>
							<resource>
								<directory>${project.basedir}/target</directory>
								<includes>
									<include>*.jar</include>
								</includes>
							</resource>
						</resources>
					</deployment>
					<appSettings>
						<!-- Ativa o perfil 'azure'. Spring Boot usara configuracoes de ambiente para este perfil. -->
						<property>
							<name>SPRING_PROFILES_ACTIVE</name>
							<value>azure</value>
						</property>
						<property>
							<name>JAVA_OPTS</name>
							<value>-Dserver.port=80 -Dspring.profiles.active=azure</value>
						</property>
						<property>
							<name>WEBSITES_PORT</name>
							<value>80</value>
						</property>
						<property>
							<name>WEBSITES_CONTAINER_START_TIME_LIMIT</name>
							<value>1800</value>
						</property>

						<!-- Configuracoes do Spring Boot para o Azure via Variaveis de Ambiente -->
						<!-- A Connection String "DefaultConnection" configurada no Azure App Service -->
						<!-- sera automaticamente detectada pelo Spring Boot em tempo de execucao -->
						<!-- atraves da variavel de ambiente SQLAZURECONNSTR_DefaultConnection. -->
						<!-- Nao precisamos definir SPRING_DATASOURCE_URL explicitamente aqui se a deteccao automatica funcionar. -->
						<!-- Se a deteccao automatica falhar, voce pode adicionar: -->
						<!-- <property> -->
						<!--     <name>SPRING_DATASOURCE_URL</name> -->
						<!--     <value>jdbc:sqlserver://serversql-waterwise.database.windows.net:1433;databaseName=database-waterwise;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;user=sqladmin;password=Fiap@2ds2025</value> -->
						<!-- </property> -->
						<!-- No entanto, eh melhor deixar o Spring Boot usar a variavel SQLAZURECONNSTR_DefaultConnection diretamente. -->

						<property>
							<name>SPRING_DATASOURCE_DRIVER_CLASS_NAME</name>
							<value>com.microsoft.sqlserver.jdbc.SQLServerDriver</value>
						</property>
						<property>
							<name>SPRING_JPA_HIBERNATE_DDL_AUTO</name>
							<value>validate</value> <!-- 'validate' ou 'none' para producao -->
						</property>
						<property>
							<name>SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT</name>
							<value>org.hibernate.dialect.SQLServer2012Dialect</value>
						</property>
						<property>
							<name>SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI</name>
							<value>https://webapp-waterwise.azurewebsites.net/login/oauth2/code/google</value>
						</property>
						<!-- Desabilitar Ollama e RabbitMQ no Azure, a menos que tenha servicos equivalentes configurados -->
						<property>
							<name>SPRING_AI_OLLAMA_ENABLED</name>
							<value>false</value>
						</property>
						<!-- Para RabbitMQ, a ausencia de spring.rabbitmq.host (nao definido aqui nem no application.properties base) -->
						<!-- geralmente eh suficiente para que o Spring Boot nao tente configurar uma conexao. -->

					</appSettings>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<skipTests>false</skipTests>
					<systemPropertyVariables>
						<!-- Ativa o perfil 'test'. Se application-test.properties nao existir, -->
						<!-- usara application.properties (que esta configurado para H2). -->
						<spring.profiles.active>test</spring.profiles.active>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.profiles.active>local</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>azure</id>
			<properties>
				<spring.profiles.active>azure</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<spring.profiles.active>test</spring.profiles.active>
			</properties>
		</profile>
	</profiles>
</project>
